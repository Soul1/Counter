{"version":3,"sources":["components/Counter.jsx","redux/actions/counter.js","containers/Counter.js","components/SetCount.jsx","containers/SetCounter.js","redux/actions/setCounter.js","components/App.jsx","redux/reducers/counter.js","redux/reducers/setCounter.js","redux/reducers/index.js","index.js","redux/store.js"],"names":["Counter","props","dispaly","count","incClick","resetClick","countMax","err","isMax","error","className","incDisable","resetDisable","disabled","onClick","incDis","type","incActive","resetDis","inc","payload","CounterContainer","a","isDis","reset","countStart","resetActive","this","React","Component","connect","state","counter","setCounter","maxCounter","startCounter","counterIncDisable","counterResetDisable","startCount","SetCount","onChange","getMaxCounter","value","getStartCounter","setDisable","setStartCounter","SetCountContainer","startValue","Number","target","maxCount","maxValue","setDis","setActive","counterSetDisable","App","initialState","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"4TAuCeA,G,MApCC,SAACC,GAAW,IAItBC,EAHGC,EAA8CF,EAA9CE,MAAOC,EAAuCH,EAAvCG,SAAUC,EAA6BJ,EAA7BI,WAAYC,EAAiBL,EAAjBK,SAAUC,EAAON,EAAPM,IACxCC,EAAQF,IAAaH,EAAQ,MAAQ,GACrCM,EAAQ,yBAAKC,UAAS,qBAAd,mBASd,OANER,EADEC,GAAS,GAAKF,EAAMU,YAAcV,EAAMW,aAChC,yBAAKF,UAAS,iBAAd,+BAIA,yBAAKA,UAAS,4CAAuCF,IAAUL,GAGzE,yBAAKO,UAAU,kBACb,6BACGH,EAAME,EAAQP,GAGjB,yBAAKQ,UAAU,eACb,4BACEA,UAAS,mBACTG,SAAUZ,EAAMU,WAChBG,QAASV,GAHX,OAMA,4BACEM,UAAS,qBACTG,SAAUZ,EAAMW,aAChBE,QAAST,GAHX,aC5BKU,EAAS,iBAAO,CAACC,KAAM,gBACvBC,EAAY,iBAAO,CAACD,KAAM,eAC1BE,EAAW,iBAAO,CAACF,KAAM,kBAGzBG,EAAM,SAACA,GAAD,MAAU,CAACH,KAAM,MAAOI,QAASD,ICA9CE,E,2MAEJjB,S,sBAAW,sBAAAkB,EAAA,2DACL,EAAKrB,MAAME,MAAQ,EAAKF,MAAMK,UADzB,gCAED,EAAKL,MAAMkB,IAAI,EAAKlB,MAAME,MAAQ,GAFjC,OAIT,EAAKoB,QAJI,2C,EAOXlB,W,sBAAa,sBAAAiB,EAAA,sEACL,EAAKrB,MAAMuB,MAAM,EAAKvB,MAAMwB,YADvB,OAEX,EAAKF,QAFM,2C,EAKbA,MAAQ,WACF,EAAKtB,MAAME,MAAQ,EAAKF,MAAMK,SAAW,GAC3C,EAAKL,MAAMc,SAET,EAAKd,MAAME,MAAQ,EAAKF,MAAMK,UAChC,EAAKL,MAAMgB,YAET,EAAKhB,MAAME,MAAQ,EAAKF,MAAMwB,YAChC,EAAKxB,MAAMyB,cAET,EAAKzB,MAAME,MAAQ,EAAKF,MAAMwB,WAAa,GAC7C,EAAKxB,MAAMiB,Y,wEAKb,OAAO,kBAAC,EAAD,CACLd,SAAUuB,KAAKvB,SACfC,WAAYsB,KAAKtB,WACjBF,MAAOwB,KAAK1B,MAAME,MAClBG,SAAUqB,KAAK1B,MAAMK,SACrBK,WAAYgB,KAAK1B,MAAMU,WACvBC,aAAce,KAAK1B,MAAMW,aACzBL,IAAKoB,KAAK1B,MAAMM,U,GArCSqB,IAAMC,WAmDtBC,eATS,SAACC,GAAD,MAAY,CAClC5B,MAAO4B,EAAMC,QAAQ7B,MACrBG,SAAUyB,EAAME,WAAWC,WAC3BT,WAAYM,EAAME,WAAWE,aAC7B5B,IAAKwB,EAAME,WAAWxB,MACtBE,WAAYoB,EAAMC,QAAQI,kBAC1BxB,aAAcmB,EAAMC,QAAQK,uBAK5B,CAACtB,SAAQE,YAAWC,WAAUQ,YDvDL,iBAAO,CAACV,KAAM,iBCuDIG,MAAKK,MDtD7B,SAACc,GAAD,MAAiB,CAACtB,KAAM,QAASI,QAASkB,KCoDhDR,CAGdT,GC/BckB,G,MAzBE,SAACtC,GAChB,IAAMQ,EAAQR,EAAMM,IAAM,QAAU,GACpC,OACE,yBAAKG,UAAU,cACb,yBAAKA,UAAU,aACb,6BACE,yBAAKA,UAAU,cAAf,OACA,yBAAKA,UAAU,cAAf,UAEF,yBAAKA,UAAU,eACb,6BACE,2BAAOA,UAAWD,EAAO+B,SAAUvC,EAAMwC,cAAeC,MAAOzC,EAAMiC,WAAYlB,KAAK,YAExF,yBAAKN,UAAU,sBACb,2BAAOA,UAAWD,EAAO+B,SAAUvC,EAAM0C,gBAAiBD,MAAOzC,EAAMkC,aAAcnB,KAAK,cAIhG,yBAAKN,UAAU,yBACb,4BAAQG,SAAUZ,EAAM2C,WAAY9B,QAASb,EAAM4C,iBAAnD,WChBFC,E,YAEJ,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KAKR0C,gBANmB,uCAMD,WAAOL,GAAP,SAAAhB,EAAA,6DAChB,EAAKyB,WAAaC,OAAOV,EAAWW,OAAOP,OAD3B,SAEV,EAAKzC,MAAMqC,WAAW,EAAKS,YAFjB,OAGhB,EAAKxB,QAHW,2CANC,wDAWnBkB,cAXmB,uCAWH,WAAOS,GAAP,SAAA5B,EAAA,6DACd,EAAK6B,SAAWH,OAAOE,EAASD,OAAOP,OADzB,SAER,EAAKzC,MAAMiD,SAAS,EAAKC,UAFjB,OAGd,EAAK5B,QAHS,2CAXG,wDAiBnBsB,gBAAkB,WAChB,EAAK5C,MAAMkB,IAAI,EAAK4B,YACpB,EAAK9C,MAAMmD,SACX,EAAK7B,QACL,EAAKtB,MAAMgB,aArBM,EAwBnBM,MAAS,WACP,GAAI,EAAKwB,YAAc,EAAKI,UAAY,EAAKJ,WAAa,GAAK,EAAKI,SAAW,EAI7E,OAHA,EAAKlD,MAAMQ,OAAM,GACjB,EAAKR,MAAMmD,cACX,EAAKnD,MAAMc,SAGT,EAAKd,MAAMkC,eAAiB,EAAKY,YAAc,EAAK9C,MAAMiC,aAAe,EAAKiB,UAChF,EAAKlD,MAAMQ,OAAM,GACjB,EAAKR,MAAMoD,YACX,EAAKpD,MAAMc,SACX,EAAKd,MAAMiB,YAEX,EAAKjB,MAAMmD,UAnCb,EAAKD,SAAW,EAChB,EAAKJ,WAAa,EAHD,E,sEA0CjB,OAAO,kBAAC,EAAD,CACLJ,gBAAiBhB,KAAKgB,gBACtBF,cAAed,KAAKc,cACpBI,gBAAiBlB,KAAKkB,gBACtBX,WAAYP,KAAK1B,MAAMiC,WACvBC,aAAcR,KAAK1B,MAAMkC,aACzBS,WAAYjB,KAAK1B,MAAM2C,WACvBrC,IAAKoB,KAAK1B,MAAMM,U,GAnDUsB,aA+DjBC,eAPS,SAACC,GAAD,MAAY,CAClCG,WAAYH,EAAME,WAAWC,WAC7BC,aAAcJ,EAAME,WAAWE,aAC/BS,WAAYb,EAAME,WAAWqB,kBAC7B/C,IAAKwB,EAAME,WAAWxB,SAKtB,CAACyC,SCrEqB,SAACA,GAAD,MAAe,CAAClC,KAAM,YAAaI,QAAS8B,IDqEvDZ,WCpEa,SAACA,GAAD,MAAiB,CAACtB,KAAM,cAAeI,QAASkB,IDoEjDc,OCvEH,iBAAO,CAACpC,KAAM,gBDuEHqC,UCtER,iBAAO,CAACrC,KAAM,eDsEKG,MAAKJ,SAAQE,YAAWC,WAAUT,MCnEzD,SAACA,GAAD,MAAY,CAACO,KAAM,YAAaI,QAASX,KDiE/CqB,CAGdgB,GEtDcS,MAbf,WACE,OACE,yBAAK7C,UAAU,OACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,gBACb,kBAAC,EAAD,S,cCZF8C,EAAe,CACnBrD,MAAO,KACPiC,mBAAmB,EACnBC,qBAAqB,GCHjBmB,EAAe,CACnBtB,WAAY,KACZC,aAAc,KACdmB,mBAAmB,EACnB7C,OAAO,GCAMgD,cAAgB,CAC7BzB,QFCa,WAAmC,IAAlCD,EAAiC,uDAAzByB,EAAcE,EAAW,uCAE/C,OAAQA,EAAO1C,MACb,IAAK,MACH,OAAO,eACFe,EADL,CAEE5B,MAAOuD,EAAOtC,UAElB,IAAK,cACH,OAAO,eACFW,EADL,CAEEK,mBAAmB,IAEvB,IAAK,aACH,OAAO,eACFL,EADL,CAEEK,mBAAmB,IAEvB,IAAK,gBACH,OAAO,eACFL,EADL,CAEEM,qBAAqB,IAEzB,IAAK,eACH,OAAO,eACFN,EADL,CAEEM,qBAAqB,IAEzB,IAAK,QACH,OAAO,eACFN,EADL,CAEE5B,MAAOuD,EAAOtC,UAElB,QACE,OAAOW,IElCXE,WDCa,WAAmC,IAAlCF,EAAiC,uDAAzByB,EAAcE,EAAW,uCAE/C,OAAQA,EAAO1C,MAEb,IAAK,YACH,OAAO,eACFe,EADL,CAEEG,WAAYwB,EAAOtC,UAEvB,IAAK,cACH,OAAO,eACFW,EADL,CAEEI,aAAcuB,EAAOtC,UAEzB,IAAK,aACH,OAAO,eACFW,EADL,CAEEuB,mBAAmB,IAEvB,IAAK,cACH,OAAO,eACFvB,EADL,CAEEuB,mBAAmB,IAEvB,IAAK,YACH,OAAO,eACFvB,EADL,CAEEtB,MAAOiD,EAAOtC,UAElB,QACE,OAAOW,ME/BP4B,ECDUC,YAAYC,GDI5BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEAK,SAASC,eAAe,W","file":"static/js/main.0f423ff5.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/Counter.scss'\r\n\r\nconst Counter = (props) => {\r\n  const {count, incClick, resetClick, countMax, err} = props;\r\n  const isMax = countMax === count ? \"red\" : '';\r\n  const error = <div className={`counter-count red`}>{`incorrect value`}</div>\r\n  let dispaly;\r\n  if (count < -1 || props.incDisable && props.resetDisable) {\r\n    dispaly = <div className={`counter-count`}>\r\n      {`enter value and press \"SET\"`}\r\n    </div>\r\n  } else {\r\n    dispaly = <div className={`counter-count counter-count--size ${isMax}`}>{count}</div>\r\n  }\r\n  return (\r\n    <div className='counter__inner'>\r\n      <div>\r\n        {err ? error : dispaly}\r\n      </div>\r\n\r\n      <div className='counter-btn'>\r\n        <button\r\n          className={`counter-btn__inc`}\r\n          disabled={props.incDisable}\r\n          onClick={incClick}>\r\n          INC\r\n        </button>\r\n        <button\r\n          className={`counter-btn__reset`}\r\n          disabled={props.resetDisable}\r\n          onClick={resetClick}>\r\n          RESET\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;","export const incDis = () => ({type: 'INC_DISABLE'});\r\nexport const incActive = () => ({type: 'INC_ACTIVE'});\r\nexport const resetDis = () => ({type: 'RESET_DISABLE'});\r\nexport const resetActive = () => ({type: 'RESET_ACTIVE'});\r\nexport const reset = (startCount) => ({type: 'RESET', payload: startCount});\r\nexport const inc = (inc) => ({type: 'INC', payload: inc});\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Counter from '../components/Counter'\r\nimport {incDis, incActive, resetDis, resetActive, inc, reset} from '../redux/actions/counter'\r\n\r\nclass CounterContainer extends React.Component {\r\n\r\n  incClick = async () => {\r\n    if (this.props.count < this.props.countMax) {\r\n      await this.props.inc(this.props.count + 1)\r\n    }\r\n    this.isDis();\r\n  };\r\n\r\n  resetClick = async () => {\r\n    await this.props.reset(this.props.countStart);\r\n    this.isDis();\r\n  };\r\n\r\n  isDis = () => {\r\n    if (this.props.count > this.props.countMax - 1) {\r\n      this.props.incDis()\r\n    }\r\n    if (this.props.count < this.props.countMax) {\r\n      this.props.incActive()\r\n    }\r\n    if (this.props.count > this.props.countStart) {\r\n      this.props.resetActive()\r\n    }\r\n    if (this.props.count < this.props.countStart + 1) {\r\n      this.props.resetDis()\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <Counter\r\n      incClick={this.incClick}\r\n      resetClick={this.resetClick}\r\n      count={this.props.count}\r\n      countMax={this.props.countMax}\r\n      incDisable={this.props.incDisable}\r\n      resetDisable={this.props.resetDisable}\r\n      err={this.props.err}\r\n    />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  count: state.counter.count,\r\n  countMax: state.setCounter.maxCounter,\r\n  countStart: state.setCounter.startCounter,\r\n  err: state.setCounter.error,\r\n  incDisable: state.counter.counterIncDisable,\r\n  resetDisable: state.counter.counterResetDisable\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {incDis, incActive, resetDis, resetActive, inc, reset})\r\n(CounterContainer)","import React from 'react';\r\nimport '../scss/SetCounter.scss'\r\n\r\nconst SetCount = (props) => {\r\n  const error = props.err ? 'error' : ''\r\n  return (\r\n    <div className='set__inner'>\r\n      <div className='set__info'>\r\n        <div>\r\n          <div className='set__title'>Max</div>\r\n          <div className='set__title'>Start</div>\r\n        </div>\r\n        <div className='set__inputs'>\r\n          <div>\r\n            <input className={error} onChange={props.getMaxCounter} value={props.maxCounter} type='number'/>\r\n          </div>\r\n          <div className='set__inputs--input'>\r\n            <input className={error} onChange={props.getStartCounter} value={props.startCounter} type='number'/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='counter-btn set__down'>\r\n        <button disabled={props.setDisable} onClick={props.setStartCounter}>SET</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetCount;","import {connect} from 'react-redux'\r\nimport SetCount from \"../components/SetCount\";\r\nimport {maxCount, startCount, setDis, setActive, error} from '../redux/actions/setCounter'\r\nimport {inc, incDis, incActive, resetDis,} from '../redux/actions/counter'\r\nimport React, {Component} from 'react';\r\n\r\nclass SetCountContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.maxValue = 0;\r\n    this.startValue = 0;\r\n  }\r\n\r\n  getStartCounter = async (startCount) => {\r\n    this.startValue = Number(startCount.target.value);\r\n    await this.props.startCount(this.startValue);\r\n    this.isDis();\r\n  };\r\n  getMaxCounter = async (maxCount) => {\r\n    this.maxValue = Number(maxCount.target.value);\r\n    await this.props.maxCount(this.maxValue);\r\n    this.isDis();\r\n  };\r\n\r\n  setStartCounter = () => {\r\n    this.props.inc(this.startValue);\r\n    this.props.setDis();\r\n    this.isDis();\r\n    this.props.incActive()\r\n  };\r\n\r\n  isDis =  () => {\r\n    if (this.startValue >= this.maxValue || this.startValue < 0 || this.maxValue < 0) {\r\n      this.props.error(true);\r\n      this.props.setDis();\r\n      this.props.incDis();\r\n      return;\r\n    }\r\n    if (this.props.startCounter === this.startValue && this.props.maxCounter === this.maxValue) {\r\n      this.props.error(false);\r\n      this.props.setActive();\r\n      this.props.incDis();\r\n      this.props.resetDis();\r\n    } else {\r\n      this.props.setDis();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <SetCount\r\n      getStartCounter={this.getStartCounter}\r\n      getMaxCounter={this.getMaxCounter}\r\n      setStartCounter={this.setStartCounter}\r\n      maxCounter={this.props.maxCounter}\r\n      startCounter={this.props.startCounter}\r\n      setDisable={this.props.setDisable}\r\n      err={this.props.err}\r\n    />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  maxCounter: state.setCounter.maxCounter,\r\n  startCounter: state.setCounter.startCounter,\r\n  setDisable: state.setCounter.counterSetDisable,\r\n  err: state.setCounter.error,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {maxCount, startCount, setDis, setActive, inc, incDis, incActive, resetDis, error,})\r\n(SetCountContainer)","export const setDis = () => ({type: 'SET_DISABLE'});\r\nexport const setActive = () => ({type: 'SET_ACTIVE'});\r\nexport const maxCount = (maxCount) => ({type: 'MAX_COUNT', payload: maxCount});\r\nexport const startCount = (startCount) => ({type: 'START_COUNT', payload: startCount});\r\nexport const error = (error) => ({type: 'SET_ERROR', payload: error});","import React from 'react';\nimport '../scss/App.scss';\nimport Counter from \"../containers/Counter\";\nimport SetCount from \"../containers/SetCounter\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"app__set-count\">\n        <SetCount />\n      </div>\n      <div className=\"app__counter\">\n        <Counter />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  count: null,\r\n  counterIncDisable: true,\r\n  counterResetDisable: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'INC':\r\n      return {\r\n        ...state,\r\n        count: action.payload,\r\n      };\r\n    case 'INC_DISABLE':\r\n      return {\r\n        ...state,\r\n        counterIncDisable: true,\r\n      };\r\n    case 'INC_ACTIVE':\r\n      return {\r\n        ...state,\r\n        counterIncDisable: false,\r\n      };\r\n    case 'RESET_DISABLE':\r\n      return {\r\n        ...state,\r\n        counterResetDisable: true,\r\n      };\r\n    case 'RESET_ACTIVE':\r\n      return {\r\n        ...state,\r\n        counterResetDisable: false,\r\n      };\r\n    case 'RESET':\r\n      return {\r\n        ...state,\r\n        count: action.payload\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","const initialState = {\r\n  maxCounter: null,\r\n  startCounter: null,\r\n  counterSetDisable: true,\r\n  error: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case 'MAX_COUNT':\r\n      return {\r\n        ...state,\r\n        maxCounter: action.payload,\r\n      };\r\n    case 'START_COUNT':\r\n      return {\r\n        ...state,\r\n        startCounter: action.payload,\r\n      };\r\n    case 'SET_ACTIVE':\r\n      return {\r\n        ...state,\r\n        counterSetDisable: false,\r\n      };\r\n    case 'SET_DISABLE':\r\n      return {\r\n        ...state,\r\n        counterSetDisable: true,\r\n      };\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport counter from \"./counter\";\r\nimport setCounter from \"./setCounter\";\r\n\r\nexport default combineReducers({\r\n  counter,\r\n  setCounter\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux'\n\nimport createStore from './redux/store'\nconst store = createStore();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n","import {createStore} from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default () => {\r\n  const store = createStore(rootReducer);\r\n  return store;\r\n}"],"sourceRoot":""}