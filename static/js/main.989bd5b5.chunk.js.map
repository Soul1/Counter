{"version":3,"sources":["components/Counter.jsx","containers/Counter.js","redux/actions/counter.js","components/SetCount.jsx","components/App.jsx","redux/reducers/counter.js","redux/reducers/setCounter.js","redux/reducers/index.js","index.js","redux/store.js"],"names":["Counter","props","count","incClick","resetClick","isIncDis","incDisable","isResetDis","resetDisable","className","disabled","onClick","CounterContainer","a","countMax","inc","reset","incDis","incActive","resetActive","resetDis","this","React","Component","connect","state","counter","setCounter","maxCounter","counterIncDisable","counterResetDisable","type","payload","SetCount","App","initialState","startCounter","counterSetDisable","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.989bd5b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/Counter.scss'\r\n\r\nconst Counter = (props) => {\r\n  const {count, incClick, resetClick} = props;\r\n  const isIncDis = props.incDisable ? \" counter-btn__dis\" : \"\";\r\n  const isResetDis = props.resetDisable ? \" counter-btn__dis\" : \"\";\r\n  return (\r\n    <div className='counter__inner'>\r\n      <div className='counter-count'> {count}</div>\r\n      <div className='counter-btn'>\r\n        <button\r\n          className={`counter-btn__inc ${isIncDis}`}\r\n          disabled={props.incDisable}\r\n          onClick={incClick}>\r\n          INC\r\n        </button>\r\n        <button\r\n          className={`counter-btn__reset ${isResetDis}`}\r\n          disabled={props.resetDisable}\r\n          onClick={resetClick}>\r\n          RESET\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Counter from '../components/Counter'\r\nimport {incDis, incActive, resetDis, resetActive, inc, reset} from '../redux/actions/counter'\r\n\r\nclass CounterContainer extends React.Component {\r\n\r\n  incClick = async () => {\r\n    if (this.props.count < this.props.countMax) {\r\n      await this.props.inc(this.props.count+1)\r\n    }\r\n    this.isIncDis();\r\n    this.isResetDis();\r\n  };\r\n\r\n  resetClick = async () => {\r\n    await this.props.reset();\r\n    this.isIncDis();\r\n    this.isResetDis();\r\n  };\r\n\r\n  isIncDis = () => {\r\n    if (this.props.count > this.props.countMax - 1) {\r\n      this.props.incDis()\r\n    }\r\n    if (this.props.count < this.props.countMax) {\r\n      this.props.incActive()\r\n    }\r\n  };\r\n\r\n  isResetDis = () => {\r\n    if (this.props.count > 0) {\r\n      this.props.resetActive()\r\n    }\r\n    if (this.props.count < 1) {\r\n      this.props.resetDis()\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return <Counter\r\n      incClick={this.incClick}\r\n      resetClick={this.resetClick}\r\n      count={this.props.count}\r\n      isIncDis={this.isIncDis}\r\n      isResetDis={this.isResetDis}\r\n      incDisable={this.props.incDisable}\r\n      resetDisable={this.props.resetDisable}\r\n    />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  count: state.counter.count,\r\n  countMax: state.setCounter.maxCounter,\r\n  incDisable: state.counter.counterIncDisable,\r\n  resetDisable: state.counter.counterResetDisable\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {incDis, incActive, resetDis, resetActive, inc, reset})\r\n(CounterContainer)","export const incDis = () => ({type: 'INC_DISABLE'});\r\nexport const incActive = () => ({type: 'INC_ACTIVE'});\r\nexport const resetDis = () => ({type: 'RESET_DISABLE'});\r\nexport const resetActive = () => ({type: 'RESET_ACTIVE'});\r\nexport const reset = () => ({type: 'RESET'});\r\nexport const inc = (inc) => ({type: 'INC', payload: inc});\r\n","import React from 'react';\r\n\r\nconst SetCount = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetCount;","import React from 'react';\nimport '../scss/App.scss';\nimport Counter from \"../containers/Counter\";\nimport SetCount from \"../components/SetCount\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"app__set-count\">\n        <SetCount />\n      </div>\n      <div className=\"app__counter\">\n        <Counter />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  count: 0,\r\n  counterIncDisable: false,\r\n  counterResetDisable: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'INC':\r\n      return {\r\n        ...state,\r\n        count: action.payload,\r\n      };\r\n    case 'INC_DISABLE':\r\n      return {\r\n        ...state,\r\n        counterIncDisable: true,\r\n      };\r\n    case 'INC_ACTIVE':\r\n      return {\r\n        ...state,\r\n        counterIncDisable: false,\r\n      };\r\n    case 'RESET_DISABLE':\r\n      return {\r\n        ...state,\r\n        counterResetDisable: true,\r\n      };\r\n    case 'RESET_ACTIVE':\r\n      return {\r\n        ...state,\r\n        counterResetDisable: false,\r\n      };\r\n    case 'RESET':\r\n      return {\r\n        ...state,\r\n        count: 0\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","const initialState = {\r\n  maxCounter: 5,\r\n  startCounter: 0,\r\n  counterSetDisable: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case 'MAX_COUNT':\r\n      return {\r\n        ...state,\r\n        maxCounter: action.payload,\r\n      };\r\n      break;\r\n    case 'START_COUNT':\r\n      return {\r\n        ...state,\r\n        startCounter: action.payload,\r\n      };\r\n      break;\r\n    case 'SET_ACTIVE':\r\n      return {\r\n        ...state,\r\n        counterSetDisable: false,\r\n      };\r\n      break;\r\n    case 'SET_DISABLE':\r\n      return {\r\n        ...state,\r\n        counterSetDisable: true,\r\n      };\r\n      break;\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport counter from \"./counter\";\r\nimport setCounter from \"./setCounter\";\r\n\r\nexport default combineReducers({\r\n  counter,\r\n  setCounter\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux'\n\nimport createStore from './redux/store'\nconst store = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n","import {createStore} from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default () => {\r\n  const store = createStore(rootReducer);\r\n  return store;\r\n}"],"sourceRoot":""}