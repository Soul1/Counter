{"version":3,"sources":["components/Counter.jsx","redux/actions/counter.js","containers/Counter.js","components/SetCount.jsx","containers/SetCounter.js","redux/actions/setCounter.js","components/App.jsx","redux/reducers/counter.js","redux/reducers/setCounter.js","redux/reducers/index.js","index.js","redux/store.js"],"names":["Counter","props","count","incClick","resetClick","isIncDis","incDisable","isResetDis","resetDisable","className","disabled","onClick","inc","type","payload","CounterContainer","a","countMax","reset","countStart","incDis","incActive","resetActive","resetDis","this","React","Component","connect","state","counter","setCounter","maxCounter","startCounter","counterIncDisable","counterResetDisable","startCount","SetCount","onChange","getMaxCounter","value","getStartCounter","setStartCounter","SetCountContainer","startValue","Number","target","maxCount","isDis","setDis","setActive","setDisable","counterSetDisable","App","initialState","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7667773.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/Counter.scss'\r\n\r\nconst Counter = (props) => {\r\n  const {count, incClick, resetClick} = props;\r\n  const isIncDis = props.incDisable ? \"counter-btn__dis\" : \"\";\r\n  const isResetDis = props.resetDisable ? \"counter-btn__dis\" : \"\";\r\n  return (\r\n    <div className='counter__inner'>\r\n      {count ?\r\n        <div className={`counter-count`}>{count}</div>\r\n        : <div className='counter-count counter-ent'>'enter value and press \"SET\"'</div>}\r\n\r\n\r\n      <div className='counter-btn'>\r\n        <button\r\n          className={`counter-btn__inc ${isIncDis}`}\r\n          disabled={props.incDisable}\r\n          onClick={incClick}>\r\n          INC\r\n        </button>\r\n        <button\r\n          className={`counter-btn__reset ${isResetDis}`}\r\n          disabled={props.resetDisable}\r\n          onClick={resetClick}>\r\n          RESET\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;","export const incDis = () => ({type: 'INC_DISABLE'});\r\nexport const incActive = () => ({type: 'INC_ACTIVE'});\r\nexport const resetDis = () => ({type: 'RESET_DISABLE'});\r\nexport const resetActive = () => ({type: 'RESET_ACTIVE'});\r\nexport const reset = (startCount) => ({type: 'RESET', payload: startCount});\r\nexport const inc = (inc) => ({type: 'INC', payload: inc});\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Counter from '../components/Counter'\r\nimport {incDis, incActive, resetDis, resetActive, inc, reset} from '../redux/actions/counter'\r\n\r\nclass CounterContainer extends React.Component {\r\n\r\n  incClick = async () => {\r\n    if (this.props.count < this.props.countMax) {\r\n      await this.props.inc(this.props.count + 1)\r\n    }\r\n    this.isIncDis();\r\n    this.isResetDis();\r\n  };\r\n\r\n  resetClick = async () => {\r\n    await this.props.reset(this.props.countStart);\r\n    this.isIncDis();\r\n    this.isResetDis();\r\n  };\r\n\r\n  isIncDis = () => {\r\n    if (this.props.count > this.props.countMax - 1) {\r\n      this.props.incDis()\r\n    }\r\n    if (this.props.count < this.props.countMax) {\r\n      this.props.incActive()\r\n    }\r\n  };\r\n\r\n  isResetDis = () => {\r\n    if (this.props.count > this.props.countStart) {\r\n      this.props.resetActive()\r\n    }\r\n    if (this.props.count < this.props.countStart + 1) {\r\n      this.props.resetDis()\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <Counter\r\n      incClick={this.incClick}\r\n      resetClick={this.resetClick}\r\n      count={this.props.count}\r\n      isIncDis={this.isIncDis}\r\n      isResetDis={this.isResetDis}\r\n      incDisable={this.props.incDisable}\r\n      resetDisable={this.props.resetDisable}\r\n    />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  count: state.counter.count,\r\n  countMax: state.setCounter.maxCounter,\r\n  countStart: state.setCounter.startCounter,\r\n  incDisable: state.counter.counterIncDisable,\r\n  resetDisable: state.counter.counterResetDisable\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {incDis, incActive, resetDis, resetActive, inc, reset})\r\n(CounterContainer)","import React from 'react';\r\nimport '../scss/SetCounter.scss'\r\n\r\nconst SetCount = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input onChange={props.getMaxCounter} value={props.maxCounter} type='number'/>\r\n      </div>\r\n      <div>\r\n        <input onChange={props.getStartCounter} value={props.startCounter} type='number'/>\r\n      </div>\r\n      <div>\r\n        <button onClick={props.setStartCounter}>SET</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetCount;","import {connect} from 'react-redux'\r\nimport SetCount from \"../components/SetCount\";\r\nimport {maxCount, startCount, setDis, setActive} from '../redux/actions/setCounter'\r\nimport {inc} from '../redux/actions/counter'\r\nimport React, {Component} from 'react';\r\n\r\nclass SetCountContainer extends Component {\r\n\r\n  startValue = 0;\r\n\r\n  getStartCounter = (startCount) => {\r\n    this.props.startCount(Number(startCount.target.value));\r\n    this.startValue = Number(startCount.target.value);\r\n  };\r\n  getMaxCounter = (maxCount) => {\r\n    this.props.maxCount(Number(maxCount.target.value));\r\n  };\r\n\r\n  setStartCounter = () => {\r\n    this.props.inc(this.startValue);\r\n  };\r\n\r\n  isDis = () => {\r\n    if (this.props.startCounter < 0) {\r\n      this.props.setDis()\r\n    } else {\r\n      this.props.setActive()\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <SetCount\r\n      getStartCounter={this.getStartCounter}\r\n      getMaxCounter={this.getMaxCounter}\r\n      setStartCounter={this.setStartCounter}\r\n      isDis={this.isDis}\r\n      maxCounter={this.props.maxCounter}\r\n      startCounter={this.props.startCounter}\r\n      setDisable={this.props.setDisable}\r\n    />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  maxCounter: state.setCounter.maxCounter,\r\n  startCounter: state.setCounter.startCounter,\r\n  setDisable: state.setCounter.counterSetDisable,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {maxCount, startCount, setDis, setActive, inc})\r\n(SetCountContainer)","export const setDis = () => ({type: 'SET_DISABLE'});\r\nexport const setActive = () => ({type: 'SET_ACTIVE'});\r\nexport const maxCount = (maxCount) => ({type: 'MAX_COUNT', payload: maxCount});\r\nexport const startCount = (startCount) => ({type: 'START_COUNT', payload: startCount});","import React from 'react';\nimport '../scss/App.scss';\nimport Counter from \"../containers/Counter\";\nimport SetCount from \"../containers/SetCounter\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"app__set-count\">\n        <SetCount />\n      </div>\n      <div className=\"app__counter\">\n        <Counter />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  count: null,\r\n  counterIncDisable: false,\r\n  counterResetDisable: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'INC':\r\n      return {\r\n        ...state,\r\n        count: action.payload,\r\n      };\r\n    case 'INC_DISABLE':\r\n      return {\r\n        ...state,\r\n        counterIncDisable: true,\r\n      };\r\n    case 'INC_ACTIVE':\r\n      return {\r\n        ...state,\r\n        counterIncDisable: false,\r\n      };\r\n    case 'RESET_DISABLE':\r\n      return {\r\n        ...state,\r\n        counterResetDisable: true,\r\n      };\r\n    case 'RESET_ACTIVE':\r\n      return {\r\n        ...state,\r\n        counterResetDisable: false,\r\n      };\r\n    case 'RESET':\r\n      return {\r\n        ...state,\r\n        count: action.payload\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","const initialState = {\r\n  maxCounter: null,\r\n  startCounter: null,\r\n  counterSetDisable: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case 'MAX_COUNT':\r\n      return {\r\n        ...state,\r\n        maxCounter: action.payload,\r\n      };\r\n    case 'START_COUNT':\r\n      return {\r\n        ...state,\r\n        startCounter: action.payload,\r\n      };\r\n    case 'SET_ACTIVE':\r\n      return {\r\n        ...state,\r\n        counterSetDisable: false,\r\n      };\r\n    case 'SET_DISABLE':\r\n      return {\r\n        ...state,\r\n        counterSetDisable: true,\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport counter from \"./counter\";\r\nimport setCounter from \"./setCounter\";\r\n\r\nexport default combineReducers({\r\n  counter,\r\n  setCounter\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux'\n\nimport createStore from './redux/store'\nconst store = createStore();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n","import {createStore} from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default () => {\r\n  const store = createStore(rootReducer);\r\n  return store;\r\n}"],"sourceRoot":""}